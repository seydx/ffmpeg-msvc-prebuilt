env:
  MSYS2_PATH_TYPE: inherit
  SDK_VER: 10.0.22621.0
  REF_NAME: ${{ inputs.ref_name||github.ref_name }}

name: Build
run-name: Build ${{inputs.ref_name||github.ref_name}}

on:
  push:
    tags:
      - "*"
  workflow_call:
    inputs:
      ref_name:
        description: "Tag"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      ref_name:
        description: "Tag"
        required: true
        type: string

jobs:
  prepare:
    uses: ./.github/workflows/cache.yml
    with:
      ref_name: ${{inputs.ref_name||github.ref_name}}
  build:
    needs: prepare
    strategy:
      matrix:
        arch: [amd64, arm64]
      fail-fast: false
    runs-on: windows-2022
    env:
      name: ffmpeg-${{ inputs.ref_name||github.ref_name }}-gpl-${{matrix.arch}}-static
      target: ${{contains(matrix.arch,'arm')&&format('amd64_{0}',matrix.arch)||matrix.arch}}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{env.REF_NAME}}
          # submodules: recursive

      - name: Setup Env
        shell: bash
        id: setup
        run: |
          echo "installationPath=$(vswhere -all -legacy -property installationPath)">>$GITHUB_OUTPUT
          # KEY=$(git ls-tree -r ${{env.REF_NAME}}|grep ^160000|sort -d|md5sum|cut -d' ' -f1)
          # echo "cache-key=$KEY" >>$GITHUB_OUTPUT

      - name: Restore cached submodules
        id: cache-submodules-restore
        uses: actions/cache@v4
        with:
          path: .git/modules
          # key: ${{ runner.os }}-${{steps.setup.outputs.cache-key}}-submodules
          key: ${{ needs.prepare.outputs.cache-key }}

      - name: Pull submodules
        shell: bash
        run: |
          git submodule update --init --recursive --depth 1

      - uses: msys2/setup-msys2@v2
        with:
          install: >-
            diffutils
            make
            zip
            pkgconf
            yasm
            nasm
            libtool
            bison
            automake
            autoconf
            meson
            ninja

      - name: Remove MSYS2 link
        shell: msys2 {0}
        run: |
          rm $(which link)
          rm -rf /usr/local

      - name: Build
        shell: cmd
        run: |
          CALL "${{steps.setup.outputs.installationPath}}\VC\Auxiliary\Build\vcvarsall.bat" ${{env.target}} ${{env.SDK_VER}}
          msys2 -c "./build.sh ${{matrix.arch}} static gpl"

      - name: Debug log
        if: ${{ failure() }}
        shell: bash
        run: |
          echo [Debug]
          cat FFmpeg/ffbuild/config.log
          cat FFmpeg/ffbuild/config.mak
          cat FFmpeg/config.h

      - name: Pack
        shell: msys2 {0}
        run: |
          CWD=$(pwd)
          cd /usr/local
          zip -9 ${CWD}/${{env.name}}.zip -r .
          cd ${CWD}
          sha1sum ${{env.name}}.zip >${{env.name}}.sha1
          ./build-changelog.sh > changelog

      - name: Release
        if: ${{startsWith(github.ref, 'refs/tags/')}}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{env.REF_NAME}}
          body_path: changelog
          prerelease: ${{contains(env.REF_NAME,'dev')}}
          files: |
            ${{env.name}}.zip
            ${{env.name}}.sha1
